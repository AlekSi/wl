// Code generated by yy. DO NOT EDIT.

// Copyright 2017 The WL Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package wl

import (
	"fmt"
)

func ExampleExpr() {
	fmt.Println(exampleAST(3, "1.97"))
	// Output:
	// &wl.Expr{
	// · Token: wl.Token{
	// · · Rune: 57348,
	// · · Val: "1.97",
	// · },
	// }
}

func ExampleExpr_case01() {
	fmt.Println(exampleAST(4, "a"))
	// Output:
	// &wl.Expr{
	// · Case: 1,
	// · Token: wl.Token{
	// · · Rune: 57349,
	// · · Val: "a",
	// · },
	// }
}

func ExampleExpr_case02() {
	fmt.Println(exampleAST(5, "a :: b :: c = 1.100"))
	// Output:
	// &wl.Expr{
	// · Case: 2,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.100",
	// · · },
	// · },
	// · Tag: &wl.Tag{
	// · · Token: wl.Token{
	// · · · Rune: 57349,
	// · · · Val: "b",
	// · · },
	// · },
	// · Tag2: &wl.Tag{
	// · · Token: wl.Token{
	// · · · Rune: 57349,
	// · · · Val: "c",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 57349,
	// · · Val: "a",
	// · },
	// · Token2: wl.Token{
	// · · Rune: 57351,
	// · · Val: "::",
	// · },
	// · Token3: wl.Token{
	// · · Rune: 57351,
	// · · Val: "::",
	// · },
	// · Token4: wl.Token{
	// · · Rune: 61,
	// · · Val: "=",
	// · },
	// }
}

func ExampleExpr_case03() {
	fmt.Println(exampleAST(6, "a :: b = 1.99"))
	// Output:
	// &wl.Expr{
	// · Case: 3,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.99",
	// · · },
	// · },
	// · Tag: &wl.Tag{
	// · · Token: wl.Token{
	// · · · Rune: 57349,
	// · · · Val: "b",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 57349,
	// · · Val: "a",
	// · },
	// · Token2: wl.Token{
	// · · Rune: 57351,
	// · · Val: "::",
	// · },
	// · Token3: wl.Token{
	// · · Rune: 61,
	// · · Val: "=",
	// · },
	// }
}

func ExampleExpr_case04() {
	fmt.Println(exampleAST(7, "a [ 1.98 ]"))
	// Output:
	// &wl.Expr{
	// · Case: 4,
	// · ExprList: &wl.ExprList{
	// · · Expr: &wl.Expr{
	// · · · Token: wl.Token{
	// · · · · Rune: 57348,
	// · · · · Val: "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 57349,
	// · · Val: "a",
	// · },
	// · Token2: wl.Token{
	// · · Rune: 91,
	// · · Val: "[",
	// · },
	// · Token3: wl.Token{
	// · · Rune: 93,
	// · · Val: "]",
	// · },
	// }
}

func ExampleExpr_case05() {
	fmt.Println(exampleAST(8, "97"))
	// Output:
	// &wl.Expr{
	// · Case: 5,
	// · Token: wl.Token{
	// · · Rune: 57350,
	// · · Val: "97",
	// · },
	// }
}

func ExampleExpr_case06() {
	fmt.Println(exampleAST(9, "_"))
	// Output:
	// &wl.Expr{
	// · Case: 6,
	// · Token: wl.Token{
	// · · Rune: 57352,
	// · · Val: "_",
	// · },
	// }
}

func ExampleExpr_case07() {
	fmt.Println(exampleAST(10, "\"a\""))
	// Output:
	// &wl.Expr{
	// · Case: 7,
	// · Token: wl.Token{
	// · · Rune: 57354,
	// · · Val: "\"a\"",
	// · },
	// }
}

func ExampleExpr_case08() {
	fmt.Println(exampleAST(11, "( 1.97 )"))
	// Output:
	// &wl.Expr{
	// · Case: 8,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 40,
	// · · Val: "(",
	// · },
	// · Token2: wl.Token{
	// · · Rune: 41,
	// · · Val: ")",
	// · },
	// }
}

func ExampleExpr_case09() {
	fmt.Println(exampleAST(12, "- 1.97"))
	// Output:
	// &wl.Expr{
	// · Case: 9,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 45,
	// · · Val: "-",
	// · },
	// }
}

func ExampleExpr_case10() {
	fmt.Println(exampleAST(13, "{ }"))
	// Output:
	// &wl.Expr{
	// · Case: 10,
	// · Token: wl.Token{
	// · · Rune: 123,
	// · · Val: "{",
	// · },
	// · Token2: wl.Token{
	// · · Rune: 125,
	// · · Val: "}",
	// · },
	// }
}

func ExampleExpr_case11() {
	fmt.Println(exampleAST(14, "{ 1.97 }"))
	// Output:
	// &wl.Expr{
	// · Case: 11,
	// · ExprList: &wl.ExprList{
	// · · Expr: &wl.Expr{
	// · · · Token: wl.Token{
	// · · · · Rune: 57348,
	// · · · · Val: "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 123,
	// · · Val: "{",
	// · },
	// · Token2: wl.Token{
	// · · Rune: 125,
	// · · Val: "}",
	// · },
	// }
}

func ExampleExpr_case12() {
	fmt.Println(exampleAST(15, "1.97 =!= 1.98"))
	// Output:
	// &wl.Expr{
	// · Case: 12,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Expr2: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.98",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 57356,
	// · · Val: "=!=",
	// · },
	// }
}

func ExampleExpr_case13() {
	fmt.Println(exampleAST(16, "1.97 && 1.98"))
	// Output:
	// &wl.Expr{
	// · Case: 13,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Expr2: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.98",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 57346,
	// · · Val: "&&",
	// · },
	// }
}

func ExampleExpr_case14() {
	fmt.Println(exampleAST(17, "1.97 /; 1.98"))
	// Output:
	// &wl.Expr{
	// · Case: 14,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Expr2: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.98",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 57347,
	// · · Val: "/;",
	// · },
	// }
}

func ExampleExpr_case15() {
	fmt.Println(exampleAST(18, "1.97 := 1.98"))
	// Output:
	// &wl.Expr{
	// · Case: 15,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Expr2: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.98",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 57353,
	// · · Val: ":=",
	// · },
	// }
}

func ExampleExpr_case16() {
	fmt.Println(exampleAST(19, "1.97 !"))
	// Output:
	// &wl.Expr{
	// · Case: 16,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 33,
	// · · Val: "!",
	// · },
	// }
}

func ExampleExpr_case17() {
	fmt.Println(exampleAST(20, "1.97 * 1.98"))
	// Output:
	// &wl.Expr{
	// · Case: 17,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Expr2: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.98",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 42,
	// · · Val: "*",
	// · },
	// }
}

func ExampleExpr_case18() {
	fmt.Println(exampleAST(21, "1.97 + 1.98"))
	// Output:
	// &wl.Expr{
	// · Case: 18,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Expr2: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.98",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 43,
	// · · Val: "+",
	// · },
	// }
}

func ExampleExpr_case19() {
	fmt.Println(exampleAST(22, "1.97 / 1.98"))
	// Output:
	// &wl.Expr{
	// · Case: 19,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Expr2: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.98",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 47,
	// · · Val: "/",
	// · },
	// }
}

func ExampleExpr_case20() {
	fmt.Println(exampleAST(23, "1.97 = 1.98"))
	// Output:
	// &wl.Expr{
	// · Case: 20,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Expr2: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.98",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 61,
	// · · Val: "=",
	// · },
	// }
}

func ExampleExprList() {
	fmt.Println(exampleAST(24, "{ 1.97 ,"))
	// Output:
	// &wl.ExprList{
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// }
}

func ExampleExprList_case1() {
	fmt.Println(exampleAST(25, "{ 1.97 , 1.98 ,"))
	// Output:
	// &wl.ExprList{
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · ExprList: &wl.ExprList{
	// · · Case: 1,
	// · · Expr: &wl.Expr{
	// · · · Token: wl.Token{
	// · · · · Rune: 57348,
	// · · · · Val: "1.98",
	// · · · },
	// · · },
	// · · Token: wl.Token{
	// · · · Rune: 44,
	// · · · Val: ",",
	// · · },
	// · },
	// }
}

func ExampleStart() {
	fmt.Println(exampleAST(1, "1.97"))
	// Output:
	// &wl.Start{
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// }
}

func ExampleStart_case1() {
	fmt.Println(exampleAST(2, "1.97 ;"))
	// Output:
	// &wl.Start{
	// · Case: 1,
	// · Expr: &wl.Expr{
	// · · Token: wl.Token{
	// · · · Rune: 57348,
	// · · · Val: "1.97",
	// · · },
	// · },
	// · Token: wl.Token{
	// · · Rune: 59,
	// · · Val: ";",
	// · },
	// }
}

func ExampleTag() {
	fmt.Println(exampleAST(26, "a :: b ="))
	// Output:
	// &wl.Tag{
	// · Token: wl.Token{
	// · · Rune: 57349,
	// · · Val: "b",
	// · },
	// }
}

func ExampleTag_case1() {
	fmt.Println(exampleAST(27, "a :: \"b\" ="))
	// Output:
	// &wl.Tag{
	// · Case: 1,
	// · Token: wl.Token{
	// · · Rune: 57354,
	// · · Val: "\"b\"",
	// · },
	// }
}
