// Code generated by yy. DO NOT EDIT.

// Copyright 2017 The WL Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package wl

import (
	"fmt"
)

func ExampleCommaOpt() {
	fmt.Println(exampleAST(81, "1.97 [ 1.98 ]") == (*CommaOpt)(nil))
	// Output:
	// false
}

func ExampleCommaOpt_case1() {
	fmt.Println(exampleAST(82, "{ 1.97 , ]"))
	// Output:
	// &wl.CommaOpt{
	// · Token: ',',
	// }
}

func ExampleExprList() {
	fmt.Println(exampleAST(79, "{ 1.97 ,"))
	// Output:
	// &wl.ExprList{
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// }
}

func ExampleExprList_case1() {
	fmt.Println(exampleAST(80, "{ 1.97 , 1.98 ,"))
	// Output:
	// &wl.ExprList{
	// · ExprList: &wl.ExprList{
	// · · Case: 1,
	// · · Expression: &wl.Expression{
	// · · · Case: 55,
	// · · · Factor: &wl.Factor{
	// · · · · Term: &wl.Term{
	// · · · · · Case: 4,
	// · · · · · Token: FLOAT, "1.98",
	// · · · · },
	// · · · },
	// · · },
	// · · Token: ',',
	// · },
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// }
}

func ExampleExpression() {
	fmt.Println(exampleAST(2, "++ 1.97"))
	// Output:
	// &wl.Expression{
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: INC, "++",
	// }
}

func ExampleExpression_case01() {
	fmt.Println(exampleAST(3, "-- 1.97"))
	// Output:
	// &wl.Expression{
	// · Case: 1,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: DEC, "--",
	// }
}

func ExampleExpression_case02() {
	fmt.Println(exampleAST(4, "\\@ 1.97"))
	// Output:
	// &wl.Expression{
	// · Case: 2,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: SQRT2, "\\@",
	// }
}

func ExampleExpression_case03() {
	fmt.Println(exampleAST(5, "\\@ 1.97 \\% 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 3,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: SQRT2, "\\@",
	// · Token2: POWER_SUBSCRIPT2, "\\%",
	// }
}

func ExampleExpression_case04() {
	fmt.Println(exampleAST(6, "√ 1.97"))
	// Output:
	// &wl.Expression{
	// · Case: 4,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: SQRT, "√",
	// }
}

func ExampleExpression_case05() {
	fmt.Println(exampleAST(7, "∫ 1.97 \uf74c 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 5,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: INTEGRATE, "∫",
	// · Token2: DIFFERENTIAL_D, "\uf74c",
	// }
}

func ExampleExpression_case06() {
	fmt.Println(exampleAST(8, "! 1.97"))
	// Output:
	// &wl.Expression{
	// · Case: 6,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: '!',
	// }
}

func ExampleExpression_case07() {
	fmt.Println(exampleAST(9, "- 1.97"))
	// Output:
	// &wl.Expression{
	// · Case: 7,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: '-',
	// }
}

func ExampleExpression_case08() {
	fmt.Println(exampleAST(10, "1.97 && 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 8,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: AND, "&&",
	// }
}

func ExampleExpression_case09() {
	fmt.Println(exampleAST(11, "1.97 ++"))
	// Output:
	// &wl.Expression{
	// · Case: 9,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: INC, "++",
	// }
}

func ExampleExpression_case10() {
	fmt.Println(exampleAST(12, "1.97 --"))
	// Output:
	// &wl.Expression{
	// · Case: 10,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: DEC, "--",
	// }
}

func ExampleExpression_case11() {
	fmt.Println(exampleAST(13, "1.97 -> 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 11,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: RULE, "->",
	// }
}

func ExampleExpression_case12() {
	fmt.Println(exampleAST(14, "1.97 /* 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 12,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: RIGHT_COMPOSITION, "/*",
	// }
}

func ExampleExpression_case13() {
	fmt.Println(exampleAST(15, "1.97 /. 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 13,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: REPLACEALL, "/.",
	// }
}

func ExampleExpression_case14() {
	fmt.Println(exampleAST(16, "1.97 // 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 14,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: POSTFIX, "//",
	// }
}

func ExampleExpression_case15() {
	fmt.Println(exampleAST(17, "1.97 //. 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 15,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: REPLACEREP, "//.",
	// }
}

func ExampleExpression_case16() {
	fmt.Println(exampleAST(18, "1.97 //@ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 16,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: MAP_ALL, "//@",
	// }
}

func ExampleExpression_case17() {
	fmt.Println(exampleAST(19, "1.97 /; 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 17,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: CONDITION, "/;",
	// }
}

func ExampleExpression_case18() {
	fmt.Println(exampleAST(20, "1.97 /@ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 18,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: MAP, "/@",
	// }
}

func ExampleExpression_case19() {
	fmt.Println(exampleAST(21, "1.97 := 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 19,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: SET_DELAYED, ":=",
	// }
}

func ExampleExpression_case20() {
	fmt.Println(exampleAST(22, "1.97 :> 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 20,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: RULEDELAYED, ":>",
	// }
}

func ExampleExpression_case21() {
	fmt.Println(exampleAST(23, "1.97 <= 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 21,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: LEQ, "<=",
	// }
}

func ExampleExpression_case22() {
	fmt.Println(exampleAST(24, "1.97 <> 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 22,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: STRINGJOIN, "<>",
	// }
}

func ExampleExpression_case23() {
	fmt.Println(exampleAST(25, "1.97 =!= 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 23,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: UNSAME, "=!=",
	// }
}

func ExampleExpression_case24() {
	fmt.Println(exampleAST(26, "1.97 == 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 24,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: EQUAL, "==",
	// }
}

func ExampleExpression_case25() {
	fmt.Println(exampleAST(27, "1.97 === 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 25,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: SAME, "===",
	// }
}

func ExampleExpression_case26() {
	fmt.Println(exampleAST(28, "1.97 >= 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 26,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: GEQ, ">=",
	// }
}

func ExampleExpression_case27() {
	fmt.Println(exampleAST(29, "1.97 @* 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 27,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: COMPOSITION, "@*",
	// }
}

func ExampleExpression_case28() {
	fmt.Println(exampleAST(30, "1.97 @@ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 28,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: APPLY, "@@",
	// }
}

func ExampleExpression_case29() {
	fmt.Println(exampleAST(31, "1.97 @@@ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 29,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: APPLY_ALL, "@@@",
	// }
}

func ExampleExpression_case30() {
	fmt.Println(exampleAST(32, "1.97 \\& 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 30,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: OVERSCRIPT, "\\&",
	// }
}

func ExampleExpression_case31() {
	fmt.Println(exampleAST(33, "1.97 \\+ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 31,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: UNDERSCRIPT, "\\+",
	// }
}

func ExampleExpression_case32() {
	fmt.Println(exampleAST(34, "1.97 \\^ 1.98 \\% 1.99"))
	// Output:
	// &wl.Expression{
	// · Case: 32,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Expression3: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.99",
	// · · · },
	// · · },
	// · },
	// · Token: POWER_SUBSCRIPT1, "\\^",
	// · Token2: POWER_SUBSCRIPT2, "\\%",
	// }
}

func ExampleExpression_case33() {
	fmt.Println(exampleAST(35, "1.97 \\_ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 33,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: SUBSCRIPT, "\\_",
	// }
}

func ExampleExpression_case34() {
	fmt.Println(exampleAST(36, "1.97 || 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 34,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: OR, "||",
	// }
}

func ExampleExpression_case35() {
	fmt.Println(exampleAST(37, "1.97 * 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 35,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '*',
	// }
}

func ExampleExpression_case36() {
	fmt.Println(exampleAST(38, "1.97 + 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 36,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '+',
	// }
}

func ExampleExpression_case37() {
	fmt.Println(exampleAST(39, "1.97 - 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 37,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '-',
	// }
}

func ExampleExpression_case38() {
	fmt.Println(exampleAST(40, "1.97 . 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 38,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '.',
	// }
}

func ExampleExpression_case39() {
	fmt.Println(exampleAST(41, "1.97 / 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 39,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '/',
	// }
}

func ExampleExpression_case40() {
	fmt.Println(exampleAST(42, "1.97 : 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 40,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: ':',
	// }
}

func ExampleExpression_case41() {
	fmt.Println(exampleAST(43, "1.97 ;"))
	// Output:
	// &wl.Expression{
	// · Case: 41,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: ';',
	// }
}

func ExampleExpression_case42() {
	fmt.Println(exampleAST(44, "1.97 ; 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 42,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: ';',
	// }
}

func ExampleExpression_case43() {
	fmt.Println(exampleAST(45, "1.97 < 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 43,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '<',
	// }
}

func ExampleExpression_case44() {
	fmt.Println(exampleAST(46, "1.97 = 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 44,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '=',
	// }
}

func ExampleExpression_case45() {
	fmt.Println(exampleAST(47, "1.97 > 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 45,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '>',
	// }
}

func ExampleExpression_case46() {
	fmt.Println(exampleAST(48, "1.97 ? 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 46,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '?',
	// }
}

func ExampleExpression_case47() {
	fmt.Println(exampleAST(49, "1.97 @ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 47,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '@',
	// }
}

func ExampleExpression_case48() {
	fmt.Println(exampleAST(50, "1.97 ^ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 48,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '^',
	// }
}

func ExampleExpression_case49() {
	fmt.Println(exampleAST(51, "1.97 | 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 49,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '|',
	// }
}

func ExampleExpression_case50() {
	fmt.Println(exampleAST(52, "1.97 ~ 1.98"))
	// Output:
	// &wl.Expression{
	// · Case: 50,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Expression2: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.98",
	// · · · },
	// · · },
	// · },
	// · Token: '~',
	// }
}

func ExampleExpression_case51() {
	fmt.Println(exampleAST(53, "1.97 \uf3c8"))
	// Output:
	// &wl.Expression{
	// · Case: 51,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: CONJUGATE, "\uf3c8",
	// }
}

func ExampleExpression_case52() {
	fmt.Println(exampleAST(54, "1.97 \uf3c9"))
	// Output:
	// &wl.Expression{
	// · Case: 52,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: CONJUGATE_TRANSPOSE, "\uf3c9",
	// }
}

func ExampleExpression_case53() {
	fmt.Println(exampleAST(55, "1.97 \uf3ce"))
	// Output:
	// &wl.Expression{
	// · Case: 53,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: HERMITIAN_CONJUGATE, "\uf3ce",
	// }
}

func ExampleExpression_case54() {
	fmt.Println(exampleAST(56, "1.97 \uf3c7"))
	// Output:
	// &wl.Expression{
	// · Case: 54,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: TRANSPOSE, "\uf3c7",
	// }
}

func ExampleExpression_case55() {
	fmt.Println(exampleAST(57, "1.97"))
	// Output:
	// &wl.Expression{
	// · Case: 55,
	// · Factor: &wl.Factor{
	// · · Term: &wl.Term{
	// · · · Case: 4,
	// · · · Token: FLOAT, "1.97",
	// · · },
	// · },
	// }
}

func ExampleFactor() {
	fmt.Println(exampleAST(77, "1.97"))
	// Output:
	// &wl.Factor{
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// }
}

func ExampleFactor_case1() {
	fmt.Println(exampleAST(78, "1.97 1.98"))
	// Output:
	// &wl.Factor{
	// · Case: 1,
	// · Factor: &wl.Factor{
	// · · Term: &wl.Term{
	// · · · Case: 4,
	// · · · Token: FLOAT, "1.98",
	// · · },
	// · },
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// }
}

func ExampleTag() {
	fmt.Println(exampleAST(83, "a :: b"))
	// Output:
	// &wl.Tag{
	// · Token: IDENT, "b",
	// }
}

func ExampleTag_case1() {
	fmt.Println(exampleAST(84, "a :: \"b\""))
	// Output:
	// &wl.Tag{
	// · Case: 1,
	// · Token: STRING, "b",
	// }
}

func ExampleTerm() {
	fmt.Println(exampleAST(58, "<< \"a\""))
	// Output:
	// &wl.Term{
	// · Token: GET, "<<",
	// · Token2: STRING, "a",
	// }
}

func ExampleTerm_case01() {
	fmt.Println(exampleAST(59, "( 1.97 )"))
	// Output:
	// &wl.Term{
	// · Case: 1,
	// · Expression: &wl.Expression{
	// · · Case: 55,
	// · · Factor: &wl.Factor{
	// · · · Term: &wl.Term{
	// · · · · Case: 4,
	// · · · · Token: FLOAT, "1.97",
	// · · · },
	// · · },
	// · },
	// · Token: '(',
	// · Token2: ')',
	// }
}

func ExampleTerm_case02() {
	fmt.Println(exampleAST(60, "{ }"))
	// Output:
	// &wl.Term{
	// · Case: 2,
	// · Token: '{',
	// · Token2: '}',
	// }
}

func ExampleTerm_case03() {
	fmt.Println(exampleAST(61, "{ 1.97 }"))
	// Output:
	// &wl.Term{
	// · Case: 3,
	// · ExprList: &wl.ExprList{
	// · · Expression: &wl.Expression{
	// · · · Case: 55,
	// · · · Factor: &wl.Factor{
	// · · · · Term: &wl.Term{
	// · · · · · Case: 4,
	// · · · · · Token: FLOAT, "1.97",
	// · · · · },
	// · · · },
	// · · },
	// · },
	// · Token: '{',
	// · Token2: '}',
	// }
}

func ExampleTerm_case04() {
	fmt.Println(exampleAST(62, "1.97"))
	// Output:
	// &wl.Term{
	// · Case: 4,
	// · Token: FLOAT, "1.97",
	// }
}

func ExampleTerm_case05() {
	fmt.Println(exampleAST(63, "a"))
	// Output:
	// &wl.Term{
	// · Case: 5,
	// · Token: IDENT, "a",
	// }
}

func ExampleTerm_case06() {
	fmt.Println(exampleAST(64, "a :: b"))
	// Output:
	// &wl.Term{
	// · Case: 6,
	// · Tag: &wl.Tag{
	// · · Token: IDENT, "b",
	// · },
	// · Token: IDENT, "a",
	// · Token2: MESSAGE_NAME, "::",
	// }
}

func ExampleTerm_case07() {
	fmt.Println(exampleAST(65, "a :: b :: c"))
	// Output:
	// &wl.Term{
	// · Case: 7,
	// · Tag: &wl.Tag{
	// · · Token: IDENT, "b",
	// · },
	// · Tag2: &wl.Tag{
	// · · Token: IDENT, "c",
	// · },
	// · Token: IDENT, "a",
	// · Token2: MESSAGE_NAME, "::",
	// · Token3: MESSAGE_NAME, "::",
	// }
}

func ExampleTerm_case08() {
	fmt.Println(exampleAST(66, "97"))
	// Output:
	// &wl.Term{
	// · Case: 8,
	// · Token: INT, "97",
	// }
}

func ExampleTerm_case09() {
	fmt.Println(exampleAST(67, "a_"))
	// Output:
	// &wl.Term{
	// · Case: 9,
	// · Token: PATTERN, "a_",
	// }
}

func ExampleTerm_case10() {
	fmt.Println(exampleAST(68, "#97"))
	// Output:
	// &wl.Term{
	// · Case: 10,
	// · Token: SLOT, "#97",
	// }
}

func ExampleTerm_case11() {
	fmt.Println(exampleAST(69, "\"a\""))
	// Output:
	// &wl.Term{
	// · Case: 11,
	// · Token: STRING, "a",
	// }
}

func ExampleTerm_case12() {
	fmt.Println(exampleAST(70, "1.97 [[ 1.98 ]]"))
	// Output:
	// &wl.Term{
	// · Case: 12,
	// · ExprList: &wl.ExprList{
	// · · Expression: &wl.Expression{
	// · · · Case: 55,
	// · · · Factor: &wl.Factor{
	// · · · · Term: &wl.Term{
	// · · · · · Case: 4,
	// · · · · · Token: FLOAT, "1.98",
	// · · · · },
	// · · · },
	// · · },
	// · },
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// · Token: LPART, "[[",
	// · Token2: RPART, "]]",
	// }
}

func ExampleTerm_case13() {
	fmt.Println(exampleAST(71, "1.97 !"))
	// Output:
	// &wl.Term{
	// · Case: 13,
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// · Token: '!',
	// }
}

func ExampleTerm_case14() {
	fmt.Println(exampleAST(72, "1.97 ! !"))
	// Output:
	// &wl.Term{
	// · Case: 14,
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// · Token: '!',
	// · Token2: '!',
	// }
}

func ExampleTerm_case15() {
	fmt.Println(exampleAST(73, "1.97 &"))
	// Output:
	// &wl.Term{
	// · Case: 15,
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// · Token: '&',
	// }
}

func ExampleTerm_case16() {
	fmt.Println(exampleAST(74, "1.97 [ ]"))
	// Output:
	// &wl.Term{
	// · Case: 16,
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// · Token: '[',
	// · Token2: ']',
	// }
}

func ExampleTerm_case17() {
	fmt.Println(exampleAST(75, "1.97 [ 1.98 ]"))
	// Output:
	// &wl.Term{
	// · Case: 17,
	// · ExprList: &wl.ExprList{
	// · · Expression: &wl.Expression{
	// · · · Case: 55,
	// · · · Factor: &wl.Factor{
	// · · · · Term: &wl.Term{
	// · · · · · Case: 4,
	// · · · · · Token: FLOAT, "1.98",
	// · · · · },
	// · · · },
	// · · },
	// · },
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// · Token: '[',
	// · Token2: ']',
	// }
}

func ExampleTerm_case18() {
	fmt.Println(exampleAST(76, "1.97 '"))
	// Output:
	// &wl.Term{
	// · Case: 18,
	// · Term: &wl.Term{
	// · · Case: 4,
	// · · Token: FLOAT, "1.97",
	// · },
	// · Token: QUOTE, "'",
	// }
}

func Examplestart() {
	fmt.Println(exampleAST(1, "1.97"))
	// Output:
}
