// Code generated by goyacc - DO NOT EDIT.

// Copyright 2017 The WL Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package wl

import __yyfmt__ "fmt"

type yySymType struct {
	yys   int
	Node  Node
	Token Token
}

type yyXError struct {
	state, xsym int
}

const (
	yyDefault           = 57397
	yyEofCode           = 57344
	AND                 = 57346
	APPLY               = 57347
	APPLY_ALL           = 57348
	COMPOSITION         = 57349
	CONDITION           = 57350
	CONJUGATE           = 57351
	CONJUGATE_TRANSPOSE = 57352
	DEC                 = 57353
	DIFFERENTIAL_D      = 57354
	EQUAL               = 57355
	FACTORIAL           = 57356
	FLOAT               = 57357
	GEQ                 = 57358
	GET                 = 57359
	HERMITIAN_CONJUGATE = 57360
	IDENT               = 57361
	IGNORE              = 57362
	INC                 = 57363
	INT                 = 57364
	INTEGRATE           = 57365
	LEQ                 = 57366
	LPART               = 57367
	MAP                 = 57368
	MAP_ALL             = 57369
	MESSAGE_NAME        = 57370
	OR                  = 57371
	OVERSCRIPT          = 57372
	PATTERN             = 57373
	POSTFIX             = 57374
	POWER_SUBSCRIPT1    = 57375
	POWER_SUBSCRIPT2    = 57376
	PRE_INC             = 57377
	QUOTE               = 57378
	REPLACEALL          = 57379
	REPLACEREP          = 57380
	RIGHT_COMPOSITION   = 57381
	RPART               = 57382
	RULE                = 57383
	RULEDELAYED         = 57384
	SAME                = 57385
	SET_DELAYED         = 57386
	SLOT                = 57387
	SQRT                = 57388
	SQRT2               = 57389
	STRING              = 57390
	STRINGJOIN          = 57391
	SUBSCRIPT           = 57392
	TRANSPOSE           = 57393
	UNARYMINUS          = 57394
	UNDERSCRIPT         = 57395
	UNSAME              = 57396
	yyErrCode           = 57345

	yyMaxDepth = 200
	yyTabOfs   = -85
)

var (
	yyFollow = [][]int{
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403, 57404}, // state 0
		{57344}, // state 1
		{57344, 42, 43, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 94, 124, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57379, 57380, 57381, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                       // state 2
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                           // state 3
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                           // state 4
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                           // state 5
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                           // state 6
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                           // state 7
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                           // state 8
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                           // state 9
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396}, // state 10
		{57390}, // state 11
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                             // state 12
		{33, 40, 45, 123, 125, 57353, 57399, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                 // state 13
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 14
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57370, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},        // state 15
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 16
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 17
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 18
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 19
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57401, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57403, 57395, 57396}, // state 20
		{33, 40, 45, 123, 57353, 57399, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                      // state 21
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 22
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 23
		{33, 40, 45, 93, 123, 57353, 57399, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                  // state 24
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 25
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                   // state 26
		{42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                                            // state 27
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},               // state 28
		{44, 93, 57398}, // state 29
		{93},            // state 30
		{33, 40, 45, 93, 123, 125, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57382, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                   // state 31
		{42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                                                  // state 32
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 33
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 34
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 35
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 36
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 37
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 38
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 39
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 40
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 41
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 42
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 43
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 44
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 45
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 46
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 47
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 48
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 49
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 50
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 51
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 52
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 53
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 54
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 55
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 56
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 57
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 58
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 59
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 60
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 61
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 62
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 63
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 64
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 65
		{57344, 33, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57400, 57357, 57401, 57358, 57359, 57360, 57361, 57363, 57364, 57365, 57366, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57388, 57389, 57390, 57391, 57392, 57393, 57403, 57395, 57396}, // state 66
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 67
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 68
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 69
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 70
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 71
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 72
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 73
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 74
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 75
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 76
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 77
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 78
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 79
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 80
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 81
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 82
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 83
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 84
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 85
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 86
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 87
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 88
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 89
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 90
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 91
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 92
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 93
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 94
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 95
		{42, 43, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 94, 124, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                                                               // state 96
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                                                   // state 97
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 98
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 99
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 100
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 101
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 102
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 103
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 104
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 105
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 106
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 107
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 108
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 109
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 110
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 111
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 112
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 113
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 114
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 115
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 116
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 117
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 118
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 119
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                         // state 120
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},                     // state 121
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396},                     // state 122
		{44, 57398, 57382}, // state 123
		{57382},            // state 124
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 125
		{57361, 57390, 57402}, // state 126
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57370, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 127
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57370, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 128
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57370, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 129
		{57361, 57390, 57402}, // state 130
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 131
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 132
		{44, 125, 57398}, // state 133
		{125},            // state 134
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 135
		{41, 42, 43, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 94, 124, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57379, 57380, 57381, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                                              // state 136
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 137
		{57344, 33, 38, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 93, 94, 123, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57357, 57358, 57359, 57360, 57361, 57363, 57364, 57366, 57367, 57368, 57369, 57371, 57372, 57373, 57374, 57375, 57376, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57390, 57391, 57392, 57393, 57395, 57396}, // state 138
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                     // state 139
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                     // state 140
		{42, 43, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 94, 124, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57379, 57380, 57381, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                                                           // state 141
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                               // state 142
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                     // state 143
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                     // state 144
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                     // state 145
		{33, 40, 45, 123, 57353, 57400, 57357, 57401, 57359, 57361, 57363, 57364, 57365, 57373, 57387, 57388, 57389, 57390, 57403},                                                                                                                                                                                                                                                                                               // state 146
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                     // state 147
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                     // state 148
		{57344, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 93, 94, 124, 125, 126, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57358, 57360, 57363, 57366, 57368, 57369, 57371, 57372, 57374, 57375, 57376, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57391, 57392, 57393, 57395, 57396},                                                                                     // state 149
	}

	yyXLAT = map[int]int{
		45:    0,  // '-' (140x)
		57353: 1,  // DEC (140x)
		57363: 2,  // INC (140x)
		42:    3,  // '*' (85x)
		43:    4,  // '+' (85x)
		46:    5,  // '.' (85x)
		47:    6,  // '/' (85x)
		58:    7,  // ':' (85x)
		59:    8,  // ';' (85x)
		60:    9,  // '<' (85x)
		61:    10, // '=' (85x)
		62:    11, // '>' (85x)
		63:    12, // '?' (85x)
		64:    13, // '@' (85x)
		93:    14, // ']' (85x)
		94:    15, // '^' (85x)
		124:   16, // '|' (85x)
		125:   17, // '}' (85x)
		126:   18, // '~' (85x)
		57346: 19, // AND (85x)
		57347: 20, // APPLY (85x)
		57348: 21, // APPLY_ALL (85x)
		57349: 22, // COMPOSITION (85x)
		57350: 23, // CONDITION (85x)
		57351: 24, // CONJUGATE (85x)
		57352: 25, // CONJUGATE_TRANSPOSE (85x)
		57355: 26, // EQUAL (85x)
		57358: 27, // GEQ (85x)
		57360: 28, // HERMITIAN_CONJUGATE (85x)
		57366: 29, // LEQ (85x)
		57368: 30, // MAP (85x)
		57369: 31, // MAP_ALL (85x)
		57371: 32, // OR (85x)
		57372: 33, // OVERSCRIPT (85x)
		57374: 34, // POSTFIX (85x)
		57375: 35, // POWER_SUBSCRIPT1 (85x)
		57379: 36, // REPLACEALL (85x)
		57380: 37, // REPLACEREP (85x)
		57381: 38, // RIGHT_COMPOSITION (85x)
		57383: 39, // RULE (85x)
		57384: 40, // RULEDELAYED (85x)
		57385: 41, // SAME (85x)
		57386: 42, // SET_DELAYED (85x)
		57391: 43, // STRINGJOIN (85x)
		57392: 44, // SUBSCRIPT (85x)
		57393: 45, // TRANSPOSE (85x)
		57395: 46, // UNDERSCRIPT (85x)
		57396: 47, // UNSAME (85x)
		44:    48, // ',' (84x)
		57382: 49, // RPART (84x)
		57344: 50, // $end (81x)
		57390: 51, // STRING (81x)
		41:    52, // ')' (80x)
		57354: 53, // DIFFERENTIAL_D (80x)
		57361: 54, // IDENT (80x)
		57376: 55, // POWER_SUBSCRIPT2 (80x)
		33:    56, // '!' (78x)
		40:    57, // '(' (78x)
		123:   58, // '{' (78x)
		57357: 59, // FLOAT (78x)
		57359: 60, // GET (78x)
		57364: 61, // INT (78x)
		57373: 62, // PATTERN (78x)
		57387: 63, // SLOT (78x)
		57401: 64, // Factor (57x)
		57403: 65, // Term (57x)
		57400: 66, // Expression (56x)
		57365: 67, // INTEGRATE (56x)
		57388: 68, // SQRT (56x)
		57389: 69, // SQRT2 (56x)
		38:    70, // '&' (22x)
		91:    71, // '[' (22x)
		57367: 72, // LPART (22x)
		57378: 73, // QUOTE (22x)
		57370: 74, // MESSAGE_NAME (4x)
		57398: 75, // CommaOpt (3x)
		57399: 76, // ExprList (3x)
		57402: 77, // Tag (2x)
		57404: 78, // start (1x)
		57397: 79, // $default (0x)
		57345: 80, // error (0x)
		57356: 81, // FACTORIAL (0x)
		57362: 82, // IGNORE (0x)
		57377: 83, // PRE_INC (0x)
		57394: 84, // UNARYMINUS (0x)
	}

	yySymNames = []string{
		"'-'",
		"DEC",
		"INC",
		"'*'",
		"'+'",
		"'.'",
		"'/'",
		"':'",
		"';'",
		"'<'",
		"'='",
		"'>'",
		"'?'",
		"'@'",
		"']'",
		"'^'",
		"'|'",
		"'}'",
		"'~'",
		"AND",
		"APPLY",
		"APPLY_ALL",
		"COMPOSITION",
		"CONDITION",
		"CONJUGATE",
		"CONJUGATE_TRANSPOSE",
		"EQUAL",
		"GEQ",
		"HERMITIAN_CONJUGATE",
		"LEQ",
		"MAP",
		"MAP_ALL",
		"OR",
		"OVERSCRIPT",
		"POSTFIX",
		"POWER_SUBSCRIPT1",
		"REPLACEALL",
		"REPLACEREP",
		"RIGHT_COMPOSITION",
		"RULE",
		"RULEDELAYED",
		"SAME",
		"SET_DELAYED",
		"STRINGJOIN",
		"SUBSCRIPT",
		"TRANSPOSE",
		"UNDERSCRIPT",
		"UNSAME",
		"','",
		"RPART",
		"$end",
		"STRING",
		"')'",
		"DIFFERENTIAL_D",
		"IDENT",
		"POWER_SUBSCRIPT2",
		"'!'",
		"'('",
		"'{'",
		"FLOAT",
		"GET",
		"INT",
		"PATTERN",
		"SLOT",
		"Factor",
		"Term",
		"Expression",
		"INTEGRATE",
		"SQRT",
		"SQRT2",
		"'&'",
		"'['",
		"LPART",
		"QUOTE",
		"MESSAGE_NAME",
		"CommaOpt",
		"ExprList",
		"Tag",
		"start",
		"$default",
		"error",
		"FACTORIAL",
		"IGNORE",
		"PRE_INC",
		"UNARYMINUS",
	}

	yyTokenLiteralStrings = map[int]string{
		57353: "--",
		57363: "++",
		57346: "&&",
		57347: "@@",
		57348: "@@@",
		57349: "@*",
		57350: "/;",
		57351: "\uf3c8",
		57352: "\uf3c9",
		57355: "==",
		57358: ">=",
		57360: "\uf3ce",
		57366: "<=",
		57368: "/@",
		57369: "//@",
		57371: "||",
		57372: "\\&",
		57374: "//",
		57375: "\\^",
		57379: "/.",
		57380: "//.",
		57381: "/*",
		57383: "->",
		57384: ":>",
		57385: "===",
		57386: ":=",
		57391: "<>",
		57392: "\\_",
		57393: "\uf3c7",
		57395: "\\+",
		57396: "=!=",
		57382: "]]",
		57390: "string",
		57354: "\uf74c",
		57361: "identifier",
		57376: "\\%",
		57357: "real",
		57359: "<<",
		57364: "integer",
		57373: "pattern",
		57387: "slot",
		57365: "∫",
		57388: "√",
		57389: "\\@",
		57367: "[[",
		57378: "'",
		57370: "::",
	}

	yyReductions = map[int]struct{ xsym, components int }{
		0:  {0, 1},
		1:  {78, 1},
		2:  {66, 2},
		3:  {66, 2},
		4:  {66, 2},
		5:  {66, 4},
		6:  {66, 2},
		7:  {66, 4},
		8:  {66, 2},
		9:  {66, 2},
		10: {66, 3},
		11: {66, 2},
		12: {66, 2},
		13: {66, 3},
		14: {66, 3},
		15: {66, 3},
		16: {66, 3},
		17: {66, 3},
		18: {66, 3},
		19: {66, 3},
		20: {66, 3},
		21: {66, 3},
		22: {66, 3},
		23: {66, 3},
		24: {66, 3},
		25: {66, 3},
		26: {66, 3},
		27: {66, 3},
		28: {66, 3},
		29: {66, 3},
		30: {66, 3},
		31: {66, 3},
		32: {66, 3},
		33: {66, 3},
		34: {66, 5},
		35: {66, 3},
		36: {66, 3},
		37: {66, 3},
		38: {66, 3},
		39: {66, 3},
		40: {66, 3},
		41: {66, 3},
		42: {66, 3},
		43: {66, 2},
		44: {66, 3},
		45: {66, 3},
		46: {66, 3},
		47: {66, 3},
		48: {66, 3},
		49: {66, 3},
		50: {66, 3},
		51: {66, 3},
		52: {66, 3},
		53: {66, 2},
		54: {66, 2},
		55: {66, 2},
		56: {66, 2},
		57: {66, 1},
		58: {65, 2},
		59: {65, 3},
		60: {65, 2},
		61: {65, 4},
		62: {65, 1},
		63: {65, 1},
		64: {65, 3},
		65: {65, 5},
		66: {65, 1},
		67: {65, 1},
		68: {65, 1},
		69: {65, 1},
		70: {65, 5},
		71: {65, 2},
		72: {65, 3},
		73: {65, 2},
		74: {65, 3},
		75: {65, 5},
		76: {65, 2},
		77: {64, 1},
		78: {64, 2},
		79: {76, 1},
		80: {76, 3},
		81: {75, 0},
		82: {75, 1},
		83: {77, 1},
		84: {77, 1},
	}

	yyXErrors = map[yyXError]string{
		{0, 50}:   "invalid empty input",
		{1, -1}:   "expected $end",
		{30, -1}:  "expected ']'",
		{134, -1}: "expected '}'",
		{124, -1}: "expected ]]",
		{24, -1}:  "expected expression list or one of ['!', '(', '-', ']', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{13, -1}:  "expected expression list or one of ['!', '(', '-', '{', '}', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{21, -1}:  "expected expression list or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{66, -1}:  "expected expression or one of [$end, &&, '!', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\@, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, √, ∫, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{31, -1}:  "expected expression or one of ['!', '(', '-', ']', '{', '}', ++, --, <<, \\@, ]], identifier, integer, pattern, real, slot, string, √, ∫]",
		{3, -1}:   "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{4, -1}:   "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{5, -1}:   "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{6, -1}:   "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{7, -1}:   "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{8, -1}:   "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{9, -1}:   "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{12, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{33, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{36, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{37, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{38, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{39, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{40, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{41, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{42, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{43, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{44, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{45, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{46, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{47, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{48, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{49, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{50, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{51, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{52, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{53, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{54, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{55, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{56, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{57, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{58, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{59, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{60, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{61, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{62, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{63, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{64, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{65, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{67, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{68, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{69, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{70, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{71, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{72, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{73, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{74, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{97, -1}:  "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{142, -1}: "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{146, -1}: "expected expression or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
		{20, -1}:  "expected factor or one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{10, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{26, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{34, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{35, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{75, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{76, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{77, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{78, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{79, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{80, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{81, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{82, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{83, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{84, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{85, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{86, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{87, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{88, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{89, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{90, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{91, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{92, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{93, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{94, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{95, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{98, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{99, -1}:  "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{100, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{101, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{102, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{103, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{104, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{105, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{106, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{107, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{108, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{109, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{110, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{111, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{112, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{113, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{114, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{115, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{116, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{117, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{118, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{119, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{120, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{139, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{140, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{143, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{144, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{145, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{147, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{148, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{149, -1}: "expected one of [$end, &&, ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{2, -1}:   "expected one of [$end, &&, '*', '+', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '^', '|', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\&, \\+, \\^, \\_, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce]",
		{15, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, ::, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{127, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, ::, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{128, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, ::, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{129, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, ::, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{14, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{16, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{17, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{18, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{19, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{22, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{23, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{25, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{28, -1}:  "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{121, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{122, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{125, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{131, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{132, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{135, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{137, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{138, -1}: "expected one of [$end, &&, ', '!', '&', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '[', ']', '^', '{', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <<, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, [[, \\%, \\&, \\+, \\^, \\_, ]], identifier, integer, pattern, real, slot, string, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{136, -1}: "expected one of [&&, ')', '*', '+', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '^', '|', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\&, \\+, \\^, \\_, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce]",
		{27, -1}:  "expected one of [&&, '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce]",
		{32, -1}:  "expected one of [&&, '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', ']', '^', '|', '}', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\&, \\+, \\^, \\_, ]], ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce]",
		{96, -1}:  "expected one of [&&, '*', '+', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '^', '|', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\%, \\&, \\+, \\^, \\_, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce]",
		{141, -1}: "expected one of [&&, '*', '+', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', '^', '|', '~', ++, --, ->, /*, /., //, //., //@, /;, /@, :=, :>, <=, <>, =!=, ==, ===, >=, @*, @@, @@@, \\&, \\+, \\^, \\_, ||, \uf3c7, \uf3c8, \uf3c9, \uf3ce, \uf74c]",
		{29, -1}:  "expected optional comma or one of [',', ']']",
		{133, -1}: "expected optional comma or one of [',', '}']",
		{123, -1}: "expected optional comma or one of [',', ]]]",
		{11, -1}:  "expected string",
		{126, -1}: "expected tag or one of [identifier, string]",
		{130, -1}: "expected tag or one of [identifier, string]",
		{0, -1}:   "expected valid input or one of ['!', '(', '-', '{', ++, --, <<, \\@, identifier, integer, pattern, real, slot, string, √, ∫]",
	}

	yyParseTab = [150][]uint16{
		// 0
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 87, 92, 91, 90, 78: 86},
		{50: 85},
		{147, 120, 119, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 15: 157, 158, 18: 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 129, 132, 143, 163, 141, 133, 50: 84},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 234, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 233, 92, 91, 90},
		// 5
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 230, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 229, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 226, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 225, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 224, 92, 91, 90},
		// 10
		{28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 52: 28, 28, 55: 28},
		{51: 223},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 221, 92, 91, 90},
		{94, 89, 88, 17: 217, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 112, 92, 91, 90, 76: 218},
		{23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 70: 23, 23, 23, 23},
		// 15
		{22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 70: 22, 22, 22, 22, 211},
		{19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 70: 19, 19, 19, 19},
		{18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 70: 18, 18, 18, 18},
		{17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 70: 17, 17, 17, 17},
		{16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 70: 16, 16, 16, 16},
		// 20
		{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 104, 8, 8, 100, 8, 107, 97, 98, 99, 96, 101, 102, 103, 111, 105, 70: 108, 109, 106, 110},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 112, 92, 91, 90, 76: 208},
		{14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 207, 14, 14, 14, 14, 14, 14, 14, 70: 14, 14, 14, 14},
		{12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 70: 12, 12, 12, 12},
		{94, 89, 88, 14: 113, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 112, 92, 91, 90, 76: 114},
		// 25
		{9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 70: 9, 9, 9, 9},
		{7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 52: 7, 7, 55: 7},
		{147, 120, 119, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 6, 157, 158, 6, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 129, 132, 143, 163, 141, 133, 6, 6},
		{11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 70: 11, 11, 11, 11},
		{14: 4, 48: 116, 75: 115},
		// 30
		{14: 206},
		{94, 89, 88, 14: 3, 17: 3, 49: 3, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 117, 92, 91, 90},
		{147, 120, 119, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 5, 157, 158, 5, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 129, 132, 143, 163, 141, 133, 5, 5},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 205, 92, 91, 90},
		{74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 52: 74, 74, 55: 74},
		// 35
		{73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 52: 73, 73, 55: 73},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 204, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 203, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 202, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 201, 92, 91, 90},
		// 40
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 200, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 199, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 198, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 197, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 196, 92, 91, 90},
		// 45
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 195, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 194, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 193, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 192, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 191, 92, 91, 90},
		// 50
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 190, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 189, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 188, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 187, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 186, 92, 91, 90},
		// 55
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 185, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 184, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 181, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 180, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 179, 92, 91, 90},
		// 60
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 178, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 177, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 176, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 175, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 174, 92, 91, 90},
		// 65
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 173, 92, 91, 90},
		{94, 89, 88, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 104, 42, 42, 100, 42, 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 172, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 171, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 170, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 169, 92, 91, 90},
		// 70
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 168, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 167, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 166, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 165, 92, 91, 90},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 164, 92, 91, 90},
		// 75
		{32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 52: 32, 32, 55: 32},
		{31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 52: 31, 31, 55: 31},
		{30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 52: 30, 30, 55: 30},
		{29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 52: 29, 29, 55: 29},
		{33, 120, 119, 33, 33, 33, 33, 33, 33, 33, 33, 33, 155, 156, 33, 33, 33, 33, 33, 33, 33, 33, 137, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 140, 33, 33, 33, 33, 122, 33, 33, 33, 33, 33, 143, 33, 141, 33, 33, 33, 33, 52: 33, 33, 55: 33},
		// 80
		{147, 120, 119, 145, 146, 148, 149, 34, 34, 152, 34, 154, 155, 156, 34, 157, 34, 34, 159, 118, 138, 139, 137, 34, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 34, 142, 34, 34, 122, 34, 34, 135, 34, 132, 143, 163, 141, 133, 34, 34, 34, 52: 34, 34, 55: 34},
		{35, 120, 119, 35, 35, 35, 35, 35, 35, 35, 35, 35, 155, 156, 35, 157, 35, 35, 159, 35, 138, 139, 137, 35, 160, 161, 35, 35, 162, 35, 128, 126, 35, 140, 35, 142, 35, 35, 122, 35, 35, 35, 35, 132, 143, 163, 141, 35, 35, 35, 35, 52: 35, 35, 55: 35},
		{36, 120, 119, 36, 36, 36, 36, 36, 36, 36, 36, 36, 155, 156, 36, 36, 36, 36, 36, 36, 36, 36, 137, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 140, 36, 36, 36, 36, 122, 36, 36, 36, 36, 36, 143, 36, 141, 36, 36, 36, 36, 52: 36, 36, 55: 36},
		{37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 140, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 143, 37, 141, 37, 37, 37, 37, 52: 37, 37, 55: 37},
		{147, 120, 119, 145, 146, 148, 149, 38, 38, 38, 38, 38, 155, 156, 38, 157, 38, 38, 159, 38, 138, 139, 137, 38, 160, 161, 134, 38, 162, 38, 128, 126, 38, 140, 38, 142, 38, 38, 122, 38, 38, 38, 38, 132, 143, 163, 141, 38, 38, 38, 38, 52: 38, 38, 55: 38},
		// 85
		{147, 120, 119, 145, 146, 148, 149, 150, 39, 152, 39, 154, 155, 156, 39, 157, 158, 39, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 39, 132, 143, 163, 141, 133, 39, 39, 39, 52: 39, 39, 55: 39},
		{147, 120, 119, 145, 146, 148, 149, 40, 40, 40, 40, 154, 155, 156, 40, 157, 40, 40, 159, 40, 138, 139, 137, 40, 160, 161, 134, 136, 162, 40, 128, 126, 40, 140, 40, 142, 40, 40, 122, 40, 40, 40, 40, 132, 143, 163, 141, 40, 40, 40, 40, 52: 40, 40, 55: 40},
		{147, 120, 119, 145, 146, 148, 149, 150, 41, 152, 153, 154, 155, 156, 41, 157, 158, 41, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 129, 132, 143, 163, 141, 133, 41, 41, 41, 52: 41, 41, 55: 41},
		{147, 120, 119, 145, 146, 148, 149, 43, 43, 152, 43, 154, 155, 156, 43, 157, 158, 43, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 43, 142, 123, 125, 122, 121, 130, 135, 43, 132, 143, 163, 141, 133, 43, 43, 43, 52: 43, 43, 55: 43},
		{44, 120, 119, 44, 44, 148, 44, 44, 44, 44, 44, 44, 155, 156, 44, 157, 44, 44, 159, 44, 138, 139, 137, 44, 160, 161, 44, 44, 162, 44, 128, 126, 44, 140, 44, 142, 44, 44, 122, 44, 44, 44, 44, 132, 143, 163, 141, 44, 44, 44, 44, 52: 44, 44, 55: 44},
		// 90
		{45, 120, 119, 45, 45, 45, 45, 45, 45, 45, 45, 45, 155, 156, 45, 157, 45, 45, 159, 45, 138, 139, 137, 45, 160, 161, 45, 45, 162, 45, 128, 126, 45, 140, 45, 142, 45, 45, 122, 45, 45, 45, 45, 132, 143, 163, 141, 45, 45, 45, 45, 52: 45, 45, 55: 45},
		{46, 120, 119, 145, 146, 148, 149, 46, 46, 46, 46, 46, 155, 156, 46, 157, 46, 46, 159, 46, 138, 139, 137, 46, 160, 161, 46, 46, 162, 46, 128, 126, 46, 140, 46, 142, 46, 46, 122, 46, 46, 46, 46, 132, 143, 163, 141, 46, 46, 46, 46, 52: 46, 46, 55: 46},
		{47, 120, 119, 145, 47, 148, 149, 47, 47, 47, 47, 47, 155, 156, 47, 157, 47, 47, 159, 47, 138, 139, 137, 47, 160, 161, 47, 47, 162, 47, 128, 126, 47, 140, 47, 142, 47, 47, 122, 47, 47, 47, 47, 132, 143, 163, 141, 47, 47, 47, 47, 52: 47, 47, 55: 47},
		{48, 120, 119, 48, 48, 148, 149, 48, 48, 48, 48, 48, 155, 156, 48, 157, 48, 48, 159, 48, 138, 139, 137, 48, 160, 161, 48, 48, 162, 48, 128, 126, 48, 140, 48, 142, 48, 48, 122, 48, 48, 48, 48, 132, 143, 163, 141, 48, 48, 48, 48, 52: 48, 48, 55: 48},
		{147, 120, 119, 145, 146, 148, 149, 49, 49, 152, 49, 154, 155, 156, 49, 157, 49, 49, 159, 118, 138, 139, 137, 49, 160, 161, 134, 136, 162, 131, 128, 126, 49, 140, 49, 142, 49, 49, 122, 49, 49, 135, 49, 132, 143, 163, 141, 133, 49, 49, 49, 52: 49, 49, 55: 49},
		// 95
		{50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 140, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 143, 50, 141, 50, 50, 50, 50, 52: 50, 50, 55: 50},
		{147, 120, 119, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 15: 157, 158, 18: 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 129, 132, 143, 163, 141, 133, 55: 182},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 183, 92, 91, 90},
		{51, 120, 119, 51, 51, 51, 51, 51, 51, 51, 51, 51, 155, 156, 51, 157, 51, 51, 159, 51, 138, 139, 137, 51, 160, 161, 51, 51, 162, 51, 128, 126, 51, 140, 51, 142, 51, 51, 122, 51, 51, 51, 51, 132, 143, 163, 141, 51, 51, 51, 51, 52: 51, 51, 55: 51},
		{52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 140, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 141, 52, 52, 52, 52, 52: 52, 52, 55: 52},
		// 100
		{53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 140, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 141, 53, 53, 53, 53, 52: 53, 53, 55: 53},
		{54, 120, 119, 54, 54, 54, 54, 54, 54, 54, 54, 54, 155, 156, 54, 54, 54, 54, 159, 54, 138, 139, 137, 54, 54, 54, 54, 54, 54, 54, 128, 126, 54, 140, 54, 54, 54, 54, 122, 54, 54, 54, 54, 54, 143, 54, 141, 54, 54, 54, 54, 52: 54, 54, 55: 54},
		{55, 120, 119, 55, 55, 55, 55, 55, 55, 55, 55, 55, 155, 156, 55, 55, 55, 55, 159, 55, 138, 139, 137, 55, 55, 55, 55, 55, 55, 55, 128, 126, 55, 140, 55, 55, 55, 55, 122, 55, 55, 55, 55, 55, 143, 55, 141, 55, 55, 55, 55, 52: 55, 55, 55: 55},
		{56, 120, 119, 56, 56, 56, 56, 56, 56, 56, 56, 56, 155, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 140, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 143, 56, 141, 56, 56, 56, 56, 52: 56, 56, 55: 56},
		{147, 120, 119, 145, 146, 148, 149, 57, 57, 57, 57, 154, 155, 156, 57, 157, 57, 57, 159, 57, 138, 139, 137, 57, 160, 161, 134, 57, 162, 57, 128, 126, 57, 140, 57, 142, 57, 57, 122, 57, 57, 57, 57, 132, 143, 163, 141, 57, 57, 57, 57, 52: 57, 57, 55: 57},
		// 105
		{147, 120, 119, 145, 146, 148, 149, 58, 58, 152, 58, 154, 155, 156, 58, 157, 58, 58, 159, 58, 138, 139, 137, 58, 160, 161, 134, 136, 162, 131, 128, 126, 58, 140, 58, 142, 58, 58, 122, 58, 58, 58, 58, 132, 143, 163, 141, 58, 58, 58, 58, 52: 58, 58, 55: 58},
		{147, 120, 119, 145, 146, 148, 149, 59, 59, 59, 59, 59, 155, 156, 59, 157, 59, 59, 159, 59, 138, 139, 137, 59, 160, 161, 59, 59, 162, 59, 128, 126, 59, 140, 59, 142, 59, 59, 122, 59, 59, 59, 59, 132, 143, 163, 141, 59, 59, 59, 59, 52: 59, 59, 55: 59},
		{147, 120, 119, 145, 146, 148, 149, 60, 60, 152, 60, 154, 155, 156, 60, 157, 60, 60, 159, 60, 138, 139, 137, 60, 160, 161, 134, 136, 162, 131, 128, 126, 60, 140, 60, 142, 60, 60, 122, 60, 60, 135, 60, 132, 143, 163, 141, 60, 60, 60, 60, 52: 60, 60, 55: 60},
		{61, 120, 119, 61, 61, 61, 61, 61, 61, 61, 61, 61, 155, 156, 61, 61, 61, 61, 159, 61, 138, 139, 137, 61, 160, 161, 61, 61, 162, 61, 128, 126, 61, 140, 61, 61, 61, 61, 122, 61, 61, 61, 61, 61, 143, 163, 141, 61, 61, 61, 61, 52: 61, 61, 55: 61},
		{147, 120, 119, 145, 146, 148, 149, 62, 62, 152, 62, 154, 155, 156, 62, 157, 62, 62, 159, 62, 138, 139, 137, 62, 160, 161, 134, 136, 162, 62, 128, 126, 62, 140, 62, 142, 62, 62, 122, 62, 62, 62, 62, 132, 143, 163, 141, 62, 62, 62, 62, 52: 62, 62, 55: 62},
		// 110
		{147, 120, 119, 145, 146, 148, 149, 63, 63, 152, 63, 154, 155, 156, 63, 157, 158, 63, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 63, 142, 63, 63, 122, 121, 63, 135, 63, 132, 143, 163, 141, 133, 63, 63, 63, 52: 63, 63, 55: 63},
		{147, 120, 119, 145, 146, 148, 149, 150, 64, 152, 64, 154, 155, 156, 64, 157, 158, 64, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 64, 132, 143, 163, 141, 133, 64, 64, 64, 52: 64, 64, 55: 64},
		{65, 120, 119, 65, 65, 65, 65, 65, 65, 65, 65, 65, 155, 156, 65, 65, 65, 65, 159, 65, 138, 139, 137, 65, 65, 65, 65, 65, 65, 65, 128, 126, 65, 140, 65, 65, 65, 65, 122, 65, 65, 65, 65, 65, 143, 65, 141, 65, 65, 65, 65, 52: 65, 65, 55: 65},
		{147, 120, 119, 145, 146, 148, 149, 66, 66, 152, 66, 154, 155, 156, 66, 157, 158, 66, 159, 118, 138, 139, 137, 66, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 66, 142, 66, 66, 122, 66, 66, 135, 66, 132, 143, 163, 141, 133, 66, 66, 66, 52: 66, 66, 55: 66},
		{67, 120, 119, 67, 67, 67, 67, 67, 67, 67, 67, 67, 155, 156, 67, 67, 67, 67, 159, 67, 138, 139, 137, 67, 67, 67, 67, 67, 67, 67, 128, 126, 67, 140, 67, 67, 67, 67, 122, 67, 67, 67, 67, 67, 143, 67, 141, 67, 67, 67, 67, 52: 67, 67, 55: 67},
		// 115
		{147, 120, 119, 145, 146, 148, 149, 68, 68, 152, 68, 154, 155, 156, 68, 157, 158, 68, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 68, 142, 123, 68, 122, 121, 130, 135, 68, 132, 143, 163, 141, 133, 68, 68, 68, 52: 68, 68, 55: 68},
		{147, 120, 119, 145, 146, 148, 149, 150, 69, 152, 69, 154, 155, 156, 69, 157, 158, 69, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 69, 142, 123, 125, 122, 121, 130, 135, 69, 132, 143, 163, 141, 133, 69, 69, 69, 52: 69, 69, 55: 69},
		{147, 120, 119, 145, 146, 148, 149, 70, 70, 152, 70, 154, 155, 156, 70, 157, 158, 70, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 70, 142, 70, 70, 122, 121, 130, 135, 70, 132, 143, 163, 141, 133, 70, 70, 70, 52: 70, 70, 55: 70},
		{71, 120, 119, 71, 71, 71, 71, 71, 71, 71, 71, 71, 155, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 140, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 143, 71, 141, 71, 71, 71, 71, 52: 71, 71, 55: 71},
		{147, 120, 119, 145, 146, 148, 149, 72, 72, 152, 72, 154, 155, 156, 72, 157, 158, 72, 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 72, 142, 72, 72, 122, 72, 72, 135, 72, 132, 143, 163, 141, 133, 72, 72, 72, 52: 72, 72, 55: 72},
		// 120
		{147, 120, 119, 145, 146, 148, 149, 75, 75, 152, 75, 154, 155, 156, 75, 157, 75, 75, 159, 75, 138, 139, 137, 75, 160, 161, 134, 136, 162, 131, 128, 126, 75, 140, 75, 142, 75, 75, 122, 75, 75, 135, 75, 132, 143, 163, 141, 133, 75, 75, 75, 52: 75, 75, 55: 75},
		{10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 70: 10, 10, 10, 10},
		{13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 70: 13, 13, 13, 13},
		{48: 116, 4, 75: 209},
		{49: 210},
		// 125
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 70: 15, 15, 15, 15},
		{51: 214, 54: 213, 77: 212},
		{21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 70: 21, 21, 21, 21, 215},
		{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 70: 2, 2, 2, 2, 2},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 70: 1, 1, 1, 1, 1},
		// 130
		{51: 214, 54: 213, 77: 216},
		{20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 70: 20, 20, 20, 20},
		{25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 70: 25, 25, 25, 25},
		{17: 4, 48: 116, 75: 219},
		{17: 220},
		// 135
		{24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 70: 24, 24, 24, 24},
		{147, 120, 119, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 15: 157, 158, 18: 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 129, 132, 143, 163, 141, 133, 52: 222},
		{26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 70: 26, 26, 26, 26},
		{27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 70: 27, 27, 27, 27},
		{76, 120, 119, 76, 76, 148, 76, 76, 76, 76, 76, 76, 155, 156, 76, 157, 76, 76, 159, 76, 138, 139, 137, 76, 160, 161, 76, 76, 162, 76, 128, 126, 76, 140, 76, 142, 76, 76, 122, 76, 76, 76, 76, 132, 143, 163, 141, 76, 76, 76, 76, 52: 76, 76, 55: 76},
		// 140
		{147, 120, 119, 145, 146, 148, 149, 77, 77, 152, 77, 154, 155, 156, 77, 157, 77, 77, 159, 77, 138, 139, 137, 77, 160, 161, 134, 136, 162, 131, 128, 126, 77, 140, 77, 142, 77, 77, 122, 77, 77, 135, 77, 132, 143, 163, 141, 133, 77, 77, 77, 52: 77, 77, 55: 77},
		{147, 120, 119, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 15: 157, 158, 18: 159, 118, 138, 139, 137, 127, 160, 161, 134, 136, 162, 131, 128, 126, 144, 140, 124, 142, 123, 125, 122, 121, 130, 135, 129, 132, 143, 163, 141, 133, 53: 227},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 228, 92, 91, 90},
		{78, 120, 119, 78, 78, 78, 78, 78, 78, 78, 78, 78, 155, 156, 78, 157, 78, 78, 159, 78, 138, 139, 137, 78, 160, 161, 78, 78, 162, 78, 128, 126, 78, 140, 78, 142, 78, 78, 122, 78, 78, 78, 78, 132, 143, 163, 141, 78, 78, 78, 78, 52: 78, 78, 55: 78},
		{79, 120, 119, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 156, 79, 157, 79, 79, 159, 79, 138, 139, 137, 79, 160, 161, 79, 79, 162, 79, 128, 126, 79, 140, 79, 142, 79, 79, 122, 79, 79, 79, 79, 132, 143, 163, 141, 79, 79, 79, 79, 52: 79, 79, 55: 79},
		// 145
		{81, 120, 119, 81, 81, 81, 81, 81, 81, 81, 81, 81, 155, 156, 81, 157, 81, 81, 159, 81, 138, 139, 137, 81, 160, 161, 81, 81, 162, 81, 128, 126, 81, 140, 81, 142, 81, 81, 122, 81, 81, 81, 81, 132, 143, 163, 141, 81, 81, 81, 81, 52: 81, 81, 55: 231},
		{94, 89, 88, 51: 104, 54: 100, 56: 93, 97, 98, 99, 96, 101, 102, 103, 95, 105, 232, 92, 91, 90},
		{80, 120, 119, 80, 80, 80, 80, 80, 80, 80, 80, 80, 155, 156, 80, 157, 80, 80, 159, 80, 138, 139, 137, 80, 160, 161, 80, 80, 162, 80, 128, 126, 80, 140, 80, 142, 80, 80, 122, 80, 80, 80, 80, 132, 143, 163, 141, 80, 80, 80, 80, 52: 80, 80, 55: 80},
		{82, 120, 119, 82, 82, 82, 82, 82, 82, 82, 82, 82, 155, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 140, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 143, 82, 141, 82, 82, 82, 82, 52: 82, 82, 55: 82},
		{83, 120, 119, 83, 83, 83, 83, 83, 83, 83, 83, 83, 155, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 140, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 143, 83, 141, 83, 83, 83, 83, 52: 83, 83, 55: 83},
	}
)

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyLexerEx interface {
	yyLexer
	Reduced(rule, state int, lval *yySymType) bool
}

func yySymName(c int) (s string) {
	x, ok := yyXLAT[c]
	if ok {
		return yySymNames[x]
	}

	if c < 0x7f {
		return __yyfmt__.Sprintf("'%c'", c)
	}

	return __yyfmt__.Sprintf("%d", c)
}

func yylex1(yylex yyLexer, lval *yySymType) (n int) {
	n = yylex.Lex(lval)
	if n <= 0 {
		n = yyEofCode
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("\nlex %s(%#x %d), __yyfmt__.Sprint(yylex.(*lexer).sdump())+` `+prettyString(lval.Token): %v\n", yySymName(n), n, n, __yyfmt__.Sprint(yylex.(*lexer).sdump())+` `+prettyString(lval.Token))
	}
	return n
}

func yyParse(yylex yyLexer) int {
	const yyError = 80

	yyEx, _ := yylex.(yyLexerEx)
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, 200)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yyerrok := func() {
		if yyDebug >= 2 {
			__yyfmt__.Printf("yyerrok()\n")
		}
		Errflag = 0
	}
	_ = yyerrok
	yystate := 0
	yychar := -1
	var yyxchar int
	var yyshift int
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	if yychar < 0 {
		yylval.yys = yystate
		yychar = yylex1(yylex, &yylval)
		var ok bool
		if yyxchar, ok = yyXLAT[yychar]; !ok {
			yyxchar = len(yySymNames) // > tab width
		}
	}
	if yyDebug >= 4 {
		var a []int
		for _, v := range yyS[:yyp+1] {
			a = append(a, v.yys)
		}
		__yyfmt__.Printf("state stack %v\n", a)
	}
	row := yyParseTab[yystate]
	yyn = 0
	if yyxchar < len(row) {
		if yyn = int(row[yyxchar]); yyn != 0 {
			yyn += yyTabOfs
		}
	}
	switch {
	case yyn > 0: // shift
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		yyshift = yyn
		if yyDebug >= 2 {
			__yyfmt__.Printf("shift, and goto state %d\n", yystate)
		}
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	case yyn < 0: // reduce
	case yystate == 1: // accept
		if yyDebug >= 2 {
			__yyfmt__.Println("accept")
		}
		goto ret0
	}

	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			if yyDebug >= 1 {
				__yyfmt__.Printf("no action for %s in state %d\n", yySymName(yychar), yystate)
			}
			msg, ok := yyXErrors[yyXError{yystate, yyxchar}]
			if !ok {
				msg, ok = yyXErrors[yyXError{yystate, -1}]
			}
			if !ok && yyshift != 0 {
				msg, ok = yyXErrors[yyXError{yyshift, yyxchar}]
			}
			if !ok {
				msg, ok = yyXErrors[yyXError{yyshift, -1}]
			}
			if yychar > 0 {
				ls := yyTokenLiteralStrings[yychar]
				if ls == "" {
					ls = yySymName(yychar)
				}
				if ls != "" {
					switch {
					case msg == "":
						msg = __yyfmt__.Sprintf("unexpected %s", ls)
					default:
						msg = __yyfmt__.Sprintf("unexpected %s, %s", ls, msg)
					}
				}
			}
			if msg == "" {
				msg = "syntax error"
			}
			yylex.Error(msg)
			Nerrs++
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				row := yyParseTab[yyS[yyp].yys]
				if yyError < len(row) {
					yyn = int(row[yyError]) + yyTabOfs
					if yyn > 0 { // hit
						if yyDebug >= 2 {
							__yyfmt__.Printf("error recovery found error shift in state %d\n", yyS[yyp].yys)
						}
						yystate = yyn /* simulate a shift of "error" */
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery failed\n")
			}
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yySymName(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}

			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	r := -yyn
	x0 := yyReductions[r]
	x, n := x0.xsym, x0.components
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= n
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	exState := yystate
	yystate = int(yyParseTab[yyS[yyp].yys][x]) + yyTabOfs
	/* reduction by production r */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce using rule %v (%s), and goto state %d\n", r, yySymNames[x], yystate)
	}

	switch r {
	case 1:
		{
			yyVAL.Node = &start{
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 2:
		{
			yyVAL.Node = &Expression{
				Token:      yyS[yypt-1].Token,
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 3:
		{
			yyVAL.Node = &Expression{
				Case:       1,
				Token:      yyS[yypt-1].Token,
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 4:
		{
			yyVAL.Node = &Expression{
				Case:       2,
				Token:      yyS[yypt-1].Token,
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 5:
		{
			yyVAL.Node = &Expression{
				Case:        3,
				Token:       yyS[yypt-3].Token,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token2:      yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 6:
		{
			yyVAL.Node = &Expression{
				Case:       4,
				Token:      yyS[yypt-1].Token,
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 7:
		{
			yyVAL.Node = &Expression{
				Case:        5,
				Token:       yyS[yypt-3].Token,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token2:      yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 8:
		{
			yyVAL.Node = &Expression{
				Case:       6,
				Token:      yyS[yypt-1].Token,
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 9:
		{
			yyVAL.Node = &Expression{
				Case:       7,
				Token:      yyS[yypt-1].Token,
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 10:
		{
			yyVAL.Node = &Expression{
				Case:        8,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 11:
		{
			yyVAL.Node = &Expression{
				Case:       9,
				Expression: yyS[yypt-1].Node.(*Expression),
				Token:      yyS[yypt-0].Token,
			}
		}
	case 12:
		{
			yyVAL.Node = &Expression{
				Case:       10,
				Expression: yyS[yypt-1].Node.(*Expression),
				Token:      yyS[yypt-0].Token,
			}
		}
	case 13:
		{
			yyVAL.Node = &Expression{
				Case:        11,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 14:
		{
			yyVAL.Node = &Expression{
				Case:        12,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 15:
		{
			yyVAL.Node = &Expression{
				Case:        13,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 16:
		{
			yyVAL.Node = &Expression{
				Case:        14,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 17:
		{
			yyVAL.Node = &Expression{
				Case:        15,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 18:
		{
			yyVAL.Node = &Expression{
				Case:        16,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 19:
		{
			yyVAL.Node = &Expression{
				Case:        17,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 20:
		{
			yyVAL.Node = &Expression{
				Case:        18,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 21:
		{
			yyVAL.Node = &Expression{
				Case:        19,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 22:
		{
			yyVAL.Node = &Expression{
				Case:        20,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 23:
		{
			yyVAL.Node = &Expression{
				Case:        21,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 24:
		{
			yyVAL.Node = &Expression{
				Case:        22,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 25:
		{
			yyVAL.Node = &Expression{
				Case:        23,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 26:
		{
			yyVAL.Node = &Expression{
				Case:        24,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 27:
		{
			yyVAL.Node = &Expression{
				Case:        25,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 28:
		{
			yyVAL.Node = &Expression{
				Case:        26,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 29:
		{
			yyVAL.Node = &Expression{
				Case:        27,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 30:
		{
			yyVAL.Node = &Expression{
				Case:        28,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 31:
		{
			yyVAL.Node = &Expression{
				Case:        29,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 32:
		{
			yyVAL.Node = &Expression{
				Case:        30,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 33:
		{
			yyVAL.Node = &Expression{
				Case:        31,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 34:
		{
			yyVAL.Node = &Expression{
				Case:        32,
				Expression:  yyS[yypt-4].Node.(*Expression),
				Token:       yyS[yypt-3].Token,
				Expression2: yyS[yypt-2].Node.(*Expression),
				Token2:      yyS[yypt-1].Token,
				Expression3: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 35:
		{
			yyVAL.Node = &Expression{
				Case:        33,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 36:
		{
			yyVAL.Node = &Expression{
				Case:        34,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 37:
		{
			yyVAL.Node = &Expression{
				Case:        35,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 38:
		{
			yyVAL.Node = &Expression{
				Case:        36,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 39:
		{
			yyVAL.Node = &Expression{
				Case:        37,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 40:
		{
			yyVAL.Node = &Expression{
				Case:        38,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 41:
		{
			yyVAL.Node = &Expression{
				Case:        39,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 42:
		{
			yyVAL.Node = &Expression{
				Case:        40,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 43:
		{
			yyVAL.Node = &Expression{
				Case:       41,
				Expression: yyS[yypt-1].Node.(*Expression),
				Token:      yyS[yypt-0].Token,
			}
		}
	case 44:
		{
			yyVAL.Node = &Expression{
				Case:        42,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 45:
		{
			yyVAL.Node = &Expression{
				Case:        43,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 46:
		{
			yyVAL.Node = &Expression{
				Case:        44,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 47:
		{
			yyVAL.Node = &Expression{
				Case:        45,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 48:
		{
			yyVAL.Node = &Expression{
				Case:        46,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 49:
		{
			yyVAL.Node = &Expression{
				Case:        47,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 50:
		{
			yyVAL.Node = &Expression{
				Case:        48,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 51:
		{
			yyVAL.Node = &Expression{
				Case:        49,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 52:
		{
			yyVAL.Node = &Expression{
				Case:        50,
				Expression:  yyS[yypt-2].Node.(*Expression),
				Token:       yyS[yypt-1].Token,
				Expression2: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 53:
		{
			yyVAL.Node = &Expression{
				Case:       51,
				Expression: yyS[yypt-1].Node.(*Expression),
				Token:      yyS[yypt-0].Token,
			}
		}
	case 54:
		{
			yyVAL.Node = &Expression{
				Case:       52,
				Expression: yyS[yypt-1].Node.(*Expression),
				Token:      yyS[yypt-0].Token,
			}
		}
	case 55:
		{
			yyVAL.Node = &Expression{
				Case:       53,
				Expression: yyS[yypt-1].Node.(*Expression),
				Token:      yyS[yypt-0].Token,
			}
		}
	case 56:
		{
			yyVAL.Node = &Expression{
				Case:       54,
				Expression: yyS[yypt-1].Node.(*Expression),
				Token:      yyS[yypt-0].Token,
			}
		}
	case 57:
		{
			yyVAL.Node = &Expression{
				Case:   55,
				Factor: yyS[yypt-0].Node.(*Factor),
			}
		}
	case 58:
		{
			yyVAL.Node = &Term{
				Token:  yyS[yypt-1].Token,
				Token2: yyS[yypt-0].Token,
			}
		}
	case 59:
		{
			yyVAL.Node = &Term{
				Case:       1,
				Token:      yyS[yypt-2].Token,
				Expression: yyS[yypt-1].Node.(*Expression),
				Token2:     yyS[yypt-0].Token,
			}
		}
	case 60:
		{
			yyVAL.Node = &Term{
				Case:   2,
				Token:  yyS[yypt-1].Token,
				Token2: yyS[yypt-0].Token,
			}
		}
	case 61:
		{
			yyVAL.Node = &Term{
				Case:     3,
				Token:    yyS[yypt-3].Token,
				ExprList: yyS[yypt-2].Node.(*ExprList).reverse(),
				CommaOpt: yyS[yypt-1].Node.(*CommaOpt),
				Token2:   yyS[yypt-0].Token,
			}
		}
	case 62:
		{
			yyVAL.Node = &Term{
				Case:  4,
				Token: yyS[yypt-0].Token,
			}
		}
	case 63:
		{
			yyVAL.Node = &Term{
				Case:  5,
				Token: yyS[yypt-0].Token,
			}
		}
	case 64:
		{
			yyVAL.Node = &Term{
				Case:   6,
				Token:  yyS[yypt-2].Token,
				Token2: yyS[yypt-1].Token,
				Tag:    yyS[yypt-0].Node.(*Tag),
			}
		}
	case 65:
		{
			yyVAL.Node = &Term{
				Case:   7,
				Token:  yyS[yypt-4].Token,
				Token2: yyS[yypt-3].Token,
				Tag:    yyS[yypt-2].Node.(*Tag),
				Token3: yyS[yypt-1].Token,
				Tag2:   yyS[yypt-0].Node.(*Tag),
			}
		}
	case 66:
		{
			yyVAL.Node = &Term{
				Case:  8,
				Token: yyS[yypt-0].Token,
			}
		}
	case 67:
		{
			yyVAL.Node = &Term{
				Case:  9,
				Token: yyS[yypt-0].Token,
			}
		}
	case 68:
		{
			yyVAL.Node = &Term{
				Case:  10,
				Token: yyS[yypt-0].Token,
			}
		}
	case 69:
		{
			yyVAL.Node = &Term{
				Case:  11,
				Token: yyS[yypt-0].Token,
			}
		}
	case 70:
		{
			yyVAL.Node = &Term{
				Case:     12,
				Term:     yyS[yypt-4].Node.(*Term),
				Token:    yyS[yypt-3].Token,
				ExprList: yyS[yypt-2].Node.(*ExprList).reverse(),
				CommaOpt: yyS[yypt-1].Node.(*CommaOpt),
				Token2:   yyS[yypt-0].Token,
			}
		}
	case 71:
		{
			yyVAL.Node = &Term{
				Case:  13,
				Term:  yyS[yypt-1].Node.(*Term),
				Token: yyS[yypt-0].Token,
			}
		}
	case 72:
		{
			yyVAL.Node = &Term{
				Case:   14,
				Term:   yyS[yypt-2].Node.(*Term),
				Token:  yyS[yypt-1].Token,
				Token2: yyS[yypt-0].Token,
			}
		}
	case 73:
		{
			yyVAL.Node = &Term{
				Case:  15,
				Term:  yyS[yypt-1].Node.(*Term),
				Token: yyS[yypt-0].Token,
			}
		}
	case 74:
		{
			yyVAL.Node = &Term{
				Case:   16,
				Term:   yyS[yypt-2].Node.(*Term),
				Token:  yyS[yypt-1].Token,
				Token2: yyS[yypt-0].Token,
			}
		}
	case 75:
		{
			yyVAL.Node = &Term{
				Case:     17,
				Term:     yyS[yypt-4].Node.(*Term),
				Token:    yyS[yypt-3].Token,
				ExprList: yyS[yypt-2].Node.(*ExprList).reverse(),
				CommaOpt: yyS[yypt-1].Node.(*CommaOpt),
				Token2:   yyS[yypt-0].Token,
			}
		}
	case 76:
		{
			yyVAL.Node = &Term{
				Case:  18,
				Term:  yyS[yypt-1].Node.(*Term),
				Token: yyS[yypt-0].Token,
			}
		}
	case 77:
		{
			yyVAL.Node = &Factor{
				Term: yyS[yypt-0].Node.(*Term),
			}
		}
	case 78:
		{
			yyVAL.Node = &Factor{
				Case:   1,
				Term:   yyS[yypt-1].Node.(*Term),
				Factor: yyS[yypt-0].Node.(*Factor),
			}
		}
	case 79:
		{
			yyVAL.Node = &ExprList{
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 80:
		{
			yyVAL.Node = &ExprList{
				Case:       1,
				ExprList:   yyS[yypt-2].Node.(*ExprList),
				Token:      yyS[yypt-1].Token,
				Expression: yyS[yypt-0].Node.(*Expression),
			}
		}
	case 81:
		{
			yyVAL.Node = (*CommaOpt)(nil)
		}
	case 82:
		{
			yyVAL.Node = &CommaOpt{
				Token: yyS[yypt-0].Token,
			}
		}
	case 83:
		{
			yyVAL.Node = &Tag{
				Token: yyS[yypt-0].Token,
			}
		}
	case 84:
		{
			yyVAL.Node = &Tag{
				Case:  1,
				Token: yyS[yypt-0].Token,
			}
		}

	}

	if yyEx != nil && yyEx.Reduced(r, exState, &yyVAL) {
		return -1
	}
	goto yystack /* stack new state and value */
}
