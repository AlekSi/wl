// Code generated by golex. DO NOT EDIT.

// Copyright 2017 The WL Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package wl

func (lx *lexer) scan() int {
	c := lx.Enter()

	/* classes */

yystate0:
	yyrule := -1
	_ = yyrule
	c = lx.Rule0()
	if lx.err != nil {
		return -1
	}

	goto yystart1

	goto yystate0 // silence unused label error
	goto yyAction // silence unused label error
yyAction:
	switch yyrule {
	case 1:
		goto yyrule1
	case 2:
		goto yyrule2
	case 3:
		goto yyrule3
	case 4:
		goto yyrule4
	case 5:
		goto yyrule5
	case 6:
		goto yyrule6
	case 7:
		goto yyrule7
	case 8:
		goto yyrule8
	case 9:
		goto yyrule9
	case 10:
		goto yyrule10
	case 11:
		goto yyrule11
	}
	goto yystate1 // silence unused label error
yystate1:
	c = lx.Next()
yystart1:
	switch {
	default:
		goto yyabort
	case c == '"':
		goto yystate3
	case c == '$' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' || c == '\u0082':
		goto yystate5
	case c == '&':
		goto yystate12
	case c == '.':
		goto yystate14
	case c == '/':
		goto yystate18
	case c == ':':
		goto yystate21
	case c == '=':
		goto yystate24
	case c == '\t' || c == '\r' || c == ' ':
		goto yystate2
	case c == '_':
		goto yystate6
	case c >= '0' && c <= '9':
		goto yystate20
	}

yystate2:
	c = lx.Next()
	yyrule = 1
	lx.Mark()
	switch {
	default:
		goto yyrule1
	case c == '\t' || c == '\r' || c == ' ':
		goto yystate2
	}

yystate3:
	c = lx.Next()
	switch {
	default:
		goto yyabort
	case c == '"':
		goto yystate4
	case c >= '\x01' && c <= '!' || c >= '#' && c <= 'Ã¿':
		goto yystate3
	}

yystate4:
	c = lx.Next()
	yyrule = 7
	lx.Mark()
	goto yyrule7

yystate5:
	c = lx.Next()
	yyrule = 9
	lx.Mark()
	switch {
	default:
		goto yyrule9
	case c == '$' || c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' || c == '\u0081' || c == '\u0082':
		goto yystate5
	case c == '_':
		goto yystate6
	case c == '`':
		goto yystate10
	}

yystate6:
	c = lx.Next()
	yyrule = 11
	lx.Mark()
	switch {
	default:
		goto yyrule11
	case c == '$' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' || c == '\u0082':
		goto yystate7
	case c == '_':
		goto yystate8
	}

yystate7:
	c = lx.Next()
	yyrule = 11
	lx.Mark()
	switch {
	default:
		goto yyrule11
	case c == '$' || c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' || c == '\u0081' || c == '\u0082':
		goto yystate7
	}

yystate8:
	c = lx.Next()
	yyrule = 11
	lx.Mark()
	switch {
	default:
		goto yyrule11
	case c == '$' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' || c == '\u0082':
		goto yystate7
	case c == '_':
		goto yystate9
	}

yystate9:
	c = lx.Next()
	yyrule = 11
	lx.Mark()
	switch {
	default:
		goto yyrule11
	case c == '$' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' || c == '\u0082':
		goto yystate7
	}

yystate10:
	c = lx.Next()
	switch {
	default:
		goto yyabort
	case c == '$' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' || c == '\u0082':
		goto yystate11
	}

yystate11:
	c = lx.Next()
	yyrule = 9
	lx.Mark()
	switch {
	default:
		goto yyrule9
	case c == '$' || c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' || c == '\u0081' || c == '\u0082':
		goto yystate11
	case c == '`':
		goto yystate10
	}

yystate12:
	c = lx.Next()
	switch {
	default:
		goto yyabort
	case c == '&':
		goto yystate13
	}

yystate13:
	c = lx.Next()
	yyrule = 2
	lx.Mark()
	goto yyrule2

yystate14:
	c = lx.Next()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9':
		goto yystate15
	}

yystate15:
	c = lx.Next()
	yyrule = 8
	lx.Mark()
	switch {
	default:
		goto yyrule8
	case c == 'E' || c == 'e':
		goto yystate16
	case c >= '0' && c <= '9':
		goto yystate15
	}

yystate16:
	c = lx.Next()
	yyrule = 8
	lx.Mark()
	switch {
	default:
		goto yyrule8
	case c == '+' || c == '-' || c >= '0' && c <= '9':
		goto yystate17
	}

yystate17:
	c = lx.Next()
	yyrule = 8
	lx.Mark()
	switch {
	default:
		goto yyrule8
	case c >= '0' && c <= '9':
		goto yystate17
	}

yystate18:
	c = lx.Next()
	switch {
	default:
		goto yyabort
	case c == ';':
		goto yystate19
	}

yystate19:
	c = lx.Next()
	yyrule = 3
	lx.Mark()
	goto yyrule3

yystate20:
	c = lx.Next()
	yyrule = 10
	lx.Mark()
	switch {
	default:
		goto yyrule10
	case c == '.':
		goto yystate15
	case c == 'E' || c == 'e':
		goto yystate16
	case c >= '0' && c <= '9':
		goto yystate20
	}

yystate21:
	c = lx.Next()
	switch {
	default:
		goto yyabort
	case c == ':':
		goto yystate22
	case c == '=':
		goto yystate23
	}

yystate22:
	c = lx.Next()
	yyrule = 4
	lx.Mark()
	goto yyrule4

yystate23:
	c = lx.Next()
	yyrule = 5
	lx.Mark()
	goto yyrule5

yystate24:
	c = lx.Next()
	switch {
	default:
		goto yyabort
	case c == '!':
		goto yystate25
	}

yystate25:
	c = lx.Next()
	switch {
	default:
		goto yyabort
	case c == '=':
		goto yystate26
	}

yystate26:
	c = lx.Next()
	yyrule = 6
	lx.Mark()
	goto yyrule6

yyrule1: // [ \t\r]+

	goto yystate0
yyrule2: // "&&"
	{
		return AND
	}
yyrule3: // "/;"
	{
		return CONDITION
	}
yyrule4: // "::"
	{
		return MESSAGE
	}
yyrule5: // ":="
	{
		return SET_DELAYED
	}
yyrule6: // "=!="
	{
		return UNSAME
	}
yyrule7: // \"[^"]*\"
	{
		return STRING
	}
yyrule8: // {float}
	{
		return FLOAT
	}
yyrule9: // {ident}(`{ident})*
	{
		return IDENTIFIER
	}
yyrule10: // {int}
	{
		return INT
	}
yyrule11: // {pattern}
	{
		return PATTERN
	}
	panic("unreachable")

	goto yyabort // silence unused label error

yyabort: // no lexem recognized
	if c, ok := lx.Abort(); ok {
		switch c {
		case '[', '{':
			lx.nest++
		case ']', '}':
			lx.nest--
		}
		return c
	}

	goto yyAction
}
